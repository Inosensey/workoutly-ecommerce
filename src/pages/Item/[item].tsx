import { NextPage } from "next";
import Head from "next/head";
import { gql } from "graphql-request";
import { GraphCmsApi } from "../../Services/GraphcmsApi";
import styles from "../../../styles/Item/Item.module.css";
import ItemCard from "../../modules/Item/ItemCard";
import { useRouter } from "next/router";
import OtherItem from "../../modules/Item/OtherItem";
import Nav from "../../common/Nav";
import ReviewComments from "../../modules/Item/ReviewComments";
import { supabase } from "../../Services/Supabase/supabaseClient";
import getOrders from "../../Services/Supabase/getOrders";

//Graphcms
const QUERY = gql`
  query Item($slug: String!, $itemLimit: Int!) {
    item(where: { slug: $slug }) {
      id
      productName
      productPrice
      productQuantity
      rating
      description {
        text
      }
      productPhoto {
        url
      }
      slug
    }
    items(first: $itemLimit) {
      id
      productName
      productPrice
      slug
      productPhoto {
        url
      }
    }
  }
`;
const ITEMLIST = gql`
  {
    items {
      id
    }
  }
`;
const SLUGLIST = gql`
  {
    items {
      slug
    }
  }
`;

export const getStaticPaths = async () => {
  const { items } = await GraphCmsApi.request(SLUGLIST);
  return {
    paths: items.map((item: any) => ({ params: { item: item.slug } })),
    fallback: false,
  };
};

export const getStaticProps = async ({ params }: any) => {
  const slug = params.item;
  const ItemList = await GraphCmsApi.request(ITEMLIST);
  const itemCount = ItemList.items.length / 2;
  const { item, items } = await GraphCmsApi.request(QUERY, {
    slug: slug,
    itemLimit: itemCount,
  });
  return {
    props: { item, items },
    revalidate: 10,
  };
};

const ItemPage: NextPage = ({ item, items }: any) => {
  console.log(item);
  const router = useRouter();
  return (
    <div>
      <Head>
        <title>Workoutly Ecommerce</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/Logo.ico" />
      </Head>
      <main>
        <Nav />
        <section className={styles.container}>
          <div className={styles.backArrow}>
            <i
              onClick={() => router.back()}
              className="fa-solid fa-circle-chevron-left"
            ></i>
          </div>
          <ItemCard item={item} />
          <ReviewComments item={item} />
          <OtherItem items={items} />
        </section>
      </main>
    </div>
  );
};

export default ItemPage;
